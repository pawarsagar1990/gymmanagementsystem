@model MyProject.Models.MemberRegistration
@using MyProject.Models;
@{
    ViewBag.Title = "MemberEditData";
    Layout = "~/Views/Shared/AdminMaster.cshtml";
}
@{
    DbGymEntities db = new DbGymEntities();
    List<PackageDetail> PackageDetails = db.PackageDetails.Where(m=>m.Flag == "YES").ToList();
    List<SelectListItem> FinalName = new List<SelectListItem>();
    foreach (PackageDetail item in PackageDetails)
        {
            FinalName.Add(new SelectListItem { Text = item.NumberOfMonth + "  " + item.Pkg_Month +"  "+ "Rs. " + item.Pkg_Ammount + "  Per Package" , Value = item.ID.ToString() });
        }
        List<PaymentDetail> PaymentDetails = db.PaymentDetails.ToList();
        List<SelectListItem> PaymentName = new List<SelectListItem>();
        foreach (PaymentDetail item in PaymentDetails)
        {
            PaymentName.Add(new SelectListItem { Text = item.PaymentType, Value = item.ID.ToString() });
        }
}
<html lang="en">
<head>

    <title>Member Registration</title>

</head>
<body>
    @using (Html.BeginForm("MemberEditData", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        if (ViewBag.Message != null)
        {
            <div class="alert alert-success" role="alert">
                @ViewBag.Message
            </div>
        }
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-primary">
                    <div class="panel-header">
                        <h2><strong>Member Data Edit</strong></h2>
                    </div>
                    <div class="panel-content">
                        <div class="row">
                            <div class="col-md-12">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ID)
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label">Member Name</label>
                                            <input class="form-control" name="MemberName" id="MemberName" value="@Html.Raw(Html.AttributeEncode(Model.MemberName))" type="text" placeholder="Enter MemberName">
                                            @Html.ValidationMessageFor(m => m.MemberName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label">Email</label>
                                            <input class="form-control" name="Email" id="Email" value="@Html.Raw(Html.AttributeEncode(Model.Email))" type="text" placeholder="Enter Email">
                                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label">Password</label>
                                            <input class="form-control" name="Password" id="Password" value="@Html.Raw(Html.AttributeEncode(Model.Password))" type="text" placeholder="Enter Password">
                                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label">Mobile No.</label>
                                            <input class="form-control" name="MobileNumber" id="MobileNumber" value="@Html.Raw(Html.AttributeEncode(Model.MobileNumber))" type="text" placeholder="Enter Mobile Number">
                                            @Html.ValidationMessageFor(m => m.MobileNumber, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group" style="margin-bottom: 12px;">
                                            <p>
                                                <strong>Gender</strong>
                                            </p>
                                            <div class="input-group">
                                                <div class="icheck-inline">
                                                    <label>
                                                        <input type="radio" name="Gender" value="@Html.Raw(Html.AttributeEncode(Model.Gender))" checked data-radio="iradio_flat-blue">Male
                                                    </label>
                                                    <label>
                                                        <input type="radio" name="Gender" value="@Html.Raw(Html.AttributeEncode(Model.Gender))" data-radio="iradio_flat-blue">Female
                                                    </label>

                                                    @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group" style="margin-bottom:-8px;">
                                            <label class="form-label">Date of Birth</label>
                                            <div class="prepend-icon">
                                                <input type="text" name="DOB" id="DOB" value="@Html.Raw(Html.AttributeEncode(Model.DOB))" class="date-picker form-control" placeholder="Select a date...">
                                                <i class="icon-calendar"></i>
                                                @Html.ValidationMessageFor(m => m.DOB, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="form-label">Date of Joining</label>
                                            <div class="prepend-icon">
                                                <input type="text" name="DOJ" id="DOJ" value="@Html.Raw(Html.AttributeEncode(Model.DOJ))" class="date-picker form-control" placeholder="Select a date...">
                                                <i class="icon-calendar"></i>
                                                @Html.ValidationMessageFor(m => m.DOJ, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        @{ 
                                            string status = (Model.Flag == "YES" ? "checked" : "");
                                        }
                                        <div class="form-group">
                                            <label class="control-label">Status <input name="Flag" value="YES" id="Flag" type="checkbox" style="width: 50px;height: 20px;" @status></label>
                                            @Html.ValidationMessageFor(m => m.Flag, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-6">

                                        <div class="form-group">
                                            <label class="control-label">Address</label>
                                            <input class="form-control" name="Address" id="Address" value="@Html.Raw(Html.AttributeEncode(Model.Address))" type="text" placeholder="Enter Address">
                                            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label">City Name</label>
                                            <input class="form-control" name="City" id="City" value="@Html.Raw(Html.AttributeEncode(Model.City))" type="text" placeholder="Enter City">
                                            @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label">Zip Code</label>
                                            <input class="form-control" name="ZipCode" id="ZipCode" value="@Html.Raw(Html.AttributeEncode(Model.ZipCode))" type="text" placeholder="Enter Zip Code">
                                            @Html.ValidationMessageFor(m => m.ZipCode, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label">State</label>
                                            <input class="form-control" name="State" id="State" type="text" value="@Html.Raw(Html.AttributeEncode(Model.State))" placeholder="Enter State">
                                            @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label">Emergency Contact Name</label>
                                            <input class="form-control" name="EmergencyContactName" id="EmergencyContactName" value="@Html.Raw(Html.AttributeEncode(Model.EmergencyContactName))" type="text" placeholder="Enter Emergency Contact Name">
                                            @Html.ValidationMessageFor(m => m.EmergencyContactName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label">Emergency Contact Number</label>
                                            <input class="form-control" name="EmergencyContactNumber" id="EmergencyContactNumber" value="@Html.Raw(Html.AttributeEncode(Model.EmergencyContactNumber))" type="text" placeholder="Enter Emergency Contact Number">
                                            @Html.ValidationMessageFor(m => m.EmergencyContactNumber, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label>Select Package</label>
                                            @Html.DropDownList("Package_ID", FinalName, "Select Package", htmlAttributes: new { @class = "form-control" })

                                            @Html.ValidationMessageFor(model => model.Package_ID, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                          
                                            <label>Payment Type</label>
                                            @Html.DropDownList("Payment_Type_ID", PaymentName, "Select Payment Type", htmlAttributes: new { @class = "form-control" })

                                            @Html.ValidationMessageFor(model => model.Payment_Type_ID, "", new { @class = "text-danger" })

                                        </div>

                                    </div>
                                </div>
                                @if (ViewBag.Roles != null)
                                {
                                    <div class="form-group">
                                        <label>Select User Role</label>
                                        @Html.DropDownList("RolesForAll", (IEnumerable<SelectListItem>)ViewBag.Roles, "Select User Role", htmlAttributes: new { @class = "form-control" })
                                    </div>
                                }

                                <div class="form-group">
                                    <p>
                                        <strong>Photo Upload</strong>
                                    </p>
                                    <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                                        <div class="form-control" data-trigger="fileinput">
                                            <i class="glyphicon glyphicon-file fileinput-exists"></i><span class="fileinput-filename"></span>
                                        </div>

                                        <span class="input-group-addon btn btn-default btn-file">
                                            <span class="fileinput-new">Choose...</span><span class="fileinput-exists">Change</span>
                                            <input type="file" id="file" name="file">
                                        </span>
                                        <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">Remove</a>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label">Installment_Method</label>
                                    <input class="form-control" name="Installment_Method" id="Installment_Method" value="@Html.Raw(Html.AttributeEncode(Model.Installment_Method))" type="text" placeholder="Enter Installment Method">
                                    @Html.ValidationMessageFor(m => m.Installment_Method, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <button type="submit" class="btn btn-embossed btn-primary">Save</button>
                                    <button type="Reset" class="btn btn-embossed btn-primary">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</body>
</html>
